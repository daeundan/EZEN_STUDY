5. 반복문
6. 함수
7. DOM
8. EVENT
9. DOM 응용
10. 객체
11. Class
12. 문자열
13. 배열 ***** 지난시간! 

앞으로 배울 내용

데이터 통신 > API , Localstorage, geolocation, canvas

Js 라이브러리, 애니메이션 효과 기능

자료구조 & 알고리즘

React.js


채영 : 장바구니 // 클래스
예림 : 휠 이벤트
진우 : 중첩목록
예지 : 아코디언 메뉴


****************** 배열 이어서 진행 *******************

매개변수 : 함수를 선언할 때, 인자값으로 들어올 값의 위치에 선언해주는 변수를 지칭할 때
참조변수
인자값 : 함수를 호출할 때, 입력하는 값
매개변수에 임시변수로 (짱구, 라이온킹, 영심이 넣어도 되지만) 배열의 느낌을 줄 수 있는 직관적인 이름인
arr를 쓴 것. 잠시 참고한것, arr라는 참조변수로 사용하여 마킹을 한 것을 의미함.


요즘 코테 !!

(1) 1개의 난이도 있는 문제 제시 -> 1시간 동안 해결 요구
(2) 10개의 난이도 다양(초~상급) 문제 -> 1시간동안 해결 요구


배열의 신문법!!
전개 연산자


8월 19일(*2개월) 세 부류로 나뉨

0(1)-html, css, js => 생각했던거랑 다른 것 같아
- 초심 // 그럼 너가 생각하는 재미있는 직업군은 뭔데? -> UIUX 비전 어때요?


(2)어제, 오늘 내 실력 별로 눈에 띄게 달라지는 것 같지 않아. 나는 적성에 안맞아. 실력도 없어


(3)뭔지는 모르겠지만 만들어보는 것 자체만으로도 재미있어! - 취업 성공! 언제가 될지는 모르겠지만 골인
--> 이거 난데,,.,



// 1. 매개변수 기본값
// 2. 전개 연산자

// (1) 함수의 매개변수
// const addNum = (num01, num02) => {
//   const result = num01 + num02;

//   return result;
// };

// console.log(addNum(1, 2, 3, 4, 5));

// 위내용을 재활용이 가능한 코드로 바꾼 것! 이터러블 객체
// (2) 참조타입 변수값의 독립화
// (3) 서로 다른 배열을 하나로 병합


React.js => Middle Reducer

누산기

// total 참조변수 하는 역할 : 연산된 값을 누적 및 저장해 놓는 변수의 역할을 함
// 타입스크립트 => 명령형, 선언형 프로그래밍 함수 쓸 것임
// 저급함수라고 함 즉, low level 함수 라고 함
// 진정한 프로그래밍 영역 들어가면 고급함수를 씀 map , filter - 커스터마이징 함수로 만듦 (filter와 map의 기능을 구현하는 함수를 만들어 냄) 이때 reduce를 쓰게 됨!

// 고급함수 쓰면 ? 커스터마이징 가능!

// JS ES6 에 혼종이 태어남 (과도한 욕심아닌가)
// map & set
// 배열 & 객체
// 배열 : 인덱스 // 개수 // 넣고, 빼고 가능
// 객체 : 프로퍼티 형태 (*어떤 자료가 무슨 의미인지 확인 가능)


Map 다 좋은데 배열의 형태를 띄고 있는 이터러블한 객체의 자료구조들의 공통적인 약점이 있음. 중복되는 값을 제어하지 못한다는 것.

********** 기술면접 - Map, Set 나오기 좋으니 알아둘 것!!!!!*********